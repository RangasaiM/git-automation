// Source code is decompiled from a .class file using FernFlower decompiler.
package solutions;

import java.util.LinkedList;

public class Solution {
   public Solution() {
   }

   private void bfs(boolean[][] var1, char[][] var2, int var3, int var4, int var5, int var6) {
      LinkedList var7 = new LinkedList();
      var7.offer(new int[]{var3, var4});
      var1[var3][var4] = true;
      int[] var8 = new int[]{-1, 1, 0, 0};
      int[] var9 = new int[]{0, 0, -1, 1};

      while(!var7.isEmpty()) {
         int[] var10 = (int[])var7.poll();
         int var11 = var10[0];
         int var12 = var10[1];

         for(int var13 = 0; var13 < 4; ++var13) {
            int var14 = var11 + var8[var13];
            int var15 = var12 + var9[var13];
            if (var14 >= 0 && var14 < var5 && var15 >= 0 && var15 < var6 && !var1[var14][var15] && var2[var14][var15] == '1') {
               var1[var14][var15] = true;
               var7.offer(new int[]{var14, var15});
            }
         }
      }

   }

   public int numIslands(char[][] var1) {
      if (var1 != null && var1.length != 0 && var1[0].length != 0) {
         int var2 = var1.length;
         int var3 = var1[0].length;
         boolean[][] var4 = new boolean[var2][var3];
         int var5 = 0;

         for(int var6 = 0; var6 < var2; ++var6) {
            for(int var7 = 0; var7 < var3; ++var7) {
               if (var1[var6][var7] == '1' && !var4[var6][var7]) {
                  this.bfs(var4, var1, var6, var7, var2, var3);
                  ++var5;
               }
            }
         }

         return var5;
      } else {
         return 0;
      }
   }
}
